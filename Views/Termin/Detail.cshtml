@model List<TerminDetailViewModel>

    @{
    ViewData["Title"] = "Detail Termin List";
}

<a asp-action="Index" class="btn btn-secondary mb-2">Back to List</a>
 
<table class="table table-bordered table-striped table-responsive" id="detailtable">
    <thead>
        <tr>
     
            <th>Kode Project</th>
            <th>Jenis Termin</th>
            <th>Evaluasi Planner</th>
            <th>No WO Tagihan</th>
            @* <th>Nilai Plan</th> *@
            <th>Nilai Tagihan</th>
          
            @* <th>SA</th> *@
            <th>Periode</th>
         
            <th>Nilai Purchasing Order</th>
              @* <th>Prosentase Tagihan</th> *@
              <th>Dokumen</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
          
                <td>@item.Kode_Project</td>
                <td>@item.JenisTermin</td>
                <td>@item.Evaluasi_Planner</td>
                <td>@item.No_WO_Tagihan</td>
                @* <td>@item.Nilai_Plan.ToString("N0")</td> *@
                <td>@item.Nilai_Tagihan.ToString("N0")</td>
               
                @* <td>@item.SA</td> *@
                <td>@item.Periode.ToString("yyyy-MM-dd") S/D
                @item.Periode2.ToString("yyyy-MM-dd")</td>
                <td>@item.Nilai_Purchasing_Order?.ToString("N0")</td>
                @* <td>
    @if (item.Nilai_Purchasing_Order.HasValue && item.Nilai_Purchasing_Order > 0)
    {
        var prosentase = (item.Nilai_Tagihan / item.Nilai_Purchasing_Order.Value) * 100;
        <div class="progress">
            <div class="progress-bar" role="progressbar" style="width: @prosentase%;" aria-valuenow="@prosentase" aria-valuemin="0" aria-valuemax="100">
            </div>
        </div>
        <span>@Math.Round(prosentase).ToString("N0")%</span>  <!-- Display rounded percentage outside the bar -->
    }
                </td> *@
 


<td>
<a href="/Termin/TampilDokumenList?kode_project=@item.Kode_Project&JenisTermin=@item.JenisTermin" 
 data-bs-toggle="modal" data-bs-target="#modalDokumen">
    Lihat Dokumen
</a>
</td>


                <td>

<form asp-action="FormEdit" method="post" style="display:inline;" class="edit-form">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@item.Id" />
    <button type="submit" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i></button>
</form>
 
@* <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;" class="delete-form">
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
</form> *@

<form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;" class="delete-form">
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-danger btn-sm"><i class="fas fa-trash"></i></button>
</form>

                </td>
            </tr>
        }
    </tbody>
</table>

<a asp-action="TampilHistoryTermin" asp-route-kodeProject="@Model.FirstOrDefault()?.Kode_Project" class="btn btn-info">
    Activity Log
</a>







@{
 var email = User.Claims.FirstOrDefault(c => c.Type == "Email")?.Value ?? "unknown@example.com";
}

@section Scripts {
    <!-- Tambahkan library DataTables -->

 




<div class="modal fade" id="modalDokumen" tabindex="-1" aria-labelledby="modalDokumenLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalDokumenLabel">Daftar Dokumen</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Halaman TampilDokumenList akan dimuat di sini -->
            </div>
        </div>
    </div>
</div>



<script>
document.addEventListener("DOMContentLoaded", function () {
    var modalDokumen = document.getElementById("modalDokumen");
    
    modalDokumen.addEventListener("show.bs.modal", function (event) {
        var button = event.relatedTarget;
        var url = button.getAttribute("href"); // Ambil URL dari tombol
        
        // Muat halaman ke dalam modal
        fetch(url)
            .then(response => response.text())
            .then(html => {
                document.getElementById("modalContent").innerHTML = html;
            })
            .catch(error => console.error("Error loading page:", error));
    });
});
</script>


    <script>
        $(document).ready(function () {
            $('#detailtable').DataTable({
                paging: true, // Aktifkan Pagination
                searching: true, // Aktifkan Filter/Searching
                ordering: true, // Aktifkan Sorting
                columnDefs: [
                    { orderable: false, targets: 2 } // Kolom 'Actions' tidak diurutkan
                ]
            });
        });
    </script>


     <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Tangkap semua form dengan class 'delete-form'
            const deleteForms = document.querySelectorAll('.delete-form');
            
            deleteForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    // Hentikan pengiriman formulir langsung
                    event.preventDefault();

                    // Tampilkan SweetAlert untuk konfirmasi
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to revert this!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Kirim formulir secara manual jika dikonfirmasi
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>

 


<script>
document.addEventListener("DOMContentLoaded", function () {
    document.addEventListener("click", function (event) {
        // Pastikan elemen yang diklik memiliki class "btn-dokumen"
        if (event.target.classList.contains("btn-dokumen")) {
            event.preventDefault(); // Mencegah download langsung

            //alert("tampil"); // Pastikan ini muncul saat diklik

            var kodeProject = event.target.getAttribute("data-kode");
            var namaDokumen = event.target.getAttribute("data-nama");
            var fileUrl = event.target.getAttribute("href");

            // Kirim data ke server dengan Fetch API
            fetch("/Termin/RekamAktivitas", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                body: "kodeProject=" + encodeURIComponent(kodeProject) + 
                      "&namaDokumen=" + encodeURIComponent(namaDokumen)
            })
            .then(response => response.json())
            .then(data => {
                //alert(data.message); // Notifikasi sukses dari server
                 window.open(fileUrl, "_blank");  // Download file setelah sukses
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Gagal menyimpan aktivitas.");
            });
        }
    });
});
</script>

    
}