@model IEnumerable<dynamic>

@{
    ViewData["Title"] = "Fase Tender";
}

    <style>
    #tabelku {
        width: 100%;
        border-collapse: collapse;
    }

    #tabelku thead th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa; /* Warna background header */
        z-index: 2; /* Supaya tetap di atas */
        text-align: left; /* Sesuai kebutuhan */
        border-bottom: 2px solid #dee2e6; /* Garis bawah header */
    }

    #tabelku tbody tr:nth-child(odd) {
        background-color: #f9f9f9; /* Alternatif warna baris */
    }

    #tabelku tbody tr:nth-child(even) {
        background-color: #ffffff;
    }

    .table-container {
        max-height: 400px; /* Tinggi maksimum tabel dengan scroll */
        overflow-y: auto;
        border: 1px solid #ddd; /* Tambahkan border pada container */
    }
</style>


 <style>
        .hidden-column {
            display: none;
        }
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px rgba(0,0,0,0.2);
            padding: 12px 16px;
            z-index: 1;
        }
        .dropdown:hover .dropdown-content {
            display: block;
        }
    </style>




<div class="d-flex gap-2 mb-1">
    <a asp-action="Create" class="btn btn-primary btn-sm m-1">Create New</a>
    <button id="toggleResponsive" class="btn btn-secondary btn-sm m-1">Freeze Column</button>
    <button id="exportToExcel" class="btn btn-success btn-sm m-1">
        <i class="fa fa-file-excel"></i> Export to Excel
    </button>

    <div class="dropdown">
    <button class="btn btn-secondary btn-sm m-1">Show/Hide Columns</button>
<div class="dropdown-content" style="z-index: 999;">
    <label><input type="checkbox" data-column="0" checked onchange="handleCheckboxChange(this, 0)"> Kode Project</label><br>
    <label><input type="checkbox" data-column="1" checked onchange="handleCheckboxChange(this, 1)"> Pekerjaan</label><br>
    <label><input type="checkbox" data-column="2" checked onchange="handleCheckboxChange(this, 2)"> No Vendor</label><br>
    <label><input type="checkbox" data-column="3" checked onchange="handleCheckboxChange(this, 3)"> Pelaksana</label><br>
    <label><input type="checkbox" data-column="4" checked onchange="handleCheckboxChange(this, 4)"> PO OA</label><br>
    <label><input type="checkbox" data-column="5"  onchange="handleCheckboxChange(this, 5)"> PO SR</label><br>
    <label><input type="checkbox" data-column="6"  onchange="handleCheckboxChange(this, 6)"> PO RO</label><br>
    <label><input type="checkbox" data-column="7"  onchange="handleCheckboxChange(this, 7)"> PR OA</label><br>
    <label><input type="checkbox" data-column="8"  onchange="handleCheckboxChange(this, 8)"> PR MT</label><br>
    <label><input type="checkbox" data-column="9"  onchange="handleCheckboxChange(this, 9)"> PR SR</label><br>
    <label><input type="checkbox" data-column="10"  onchange="handleCheckboxChange(this, 10)"> Nomor SP3MK</label><br>
    <label><input type="checkbox" data-column="11"  onchange="handleCheckboxChange(this, 11)"> Nilai Purchasing Order</label><br>
    <label><input type="checkbox" data-column="12"  onchange="handleCheckboxChange(this, 12)"> Nilai Purchasing Request</label><br>
    <label><input type="checkbox" data-column="13"  onchange="handleCheckboxChange(this, 13)"> Durasi Masa Penyelesaian MPL</label><br>
    <label><input type="checkbox" data-column="14"  onchange="handleCheckboxChange(this, 14)"> Bulan</label><br>
    <label><input type="checkbox" data-column="15"  onchange="handleCheckboxChange(this, 15)"> Buyer</label><br>
    <label><input type="checkbox" data-column="16"  onchange="handleCheckboxChange(this, 16)"> Otorisasi</label><br>

</div>

</div>

</div>





    <script>
    document.getElementById('exportToExcel').addEventListener('click', function () {
        // Prepare your data (You can get the data from a table or other elements)
        let table = document.getElementById("tabelku"); // Replace with your table ID
        
        // Create a new workbook and worksheet from the table
        let wb = XLSX.utils.table_to_book(table, {sheet: "Sheet 1"});
        
        // Export the workbook as an Excel file
        XLSX.writeFile(wb, 'exported_data.xlsx');
    });
</script>







<div id="tableContainer" class="table-responsive">


<table class="table table-striped table-bordered" id="tabelku">
    <thead>
        <tr>
             
            <th>Kode Project</th>
            <th>Pekerjaan</th>
            <th>No Vendor</th>
            <th>Pelaksana</th>
            <th>PO OA</th>
            <th>PO SR</th>
            <th>PO RO</th>
            <th>PR OA</th>
            <th>PR MT</th>
            <th>PR SR</th>
            <th>Nomor SP3MK</th>
            <th>Nilai Purchasing Order</th>
            <th>Nilai Purchasing Request</th>
            <th>Durasi Masa Penyelesaian MPL</th>
            <th>Bulan</th>
            <th>Buyer</th>
            <th>Otorisasi</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model)
{
    var kodeParts = item.Tender?.Kode_Project?.Split('/');
    var disiplinFromKode = kodeParts?.Length > 2 ? kodeParts[2] : string.Empty;
    var disiplinClaim = User.Claims.FirstOrDefault(c => c.Type == "Disiplin")?.Value;

    // Jika disiplinClaim adalah "All", tampilkan semua data
    if (string.IsNullOrEmpty(disiplinClaim) || disiplinClaim == "All" || disiplinFromKode.Equals(disiplinClaim, StringComparison.OrdinalIgnoreCase))
    {
                <tr>
                
                    <td>@item.Tender.Kode_Project</td>
                    <td>@item.Planning?.Pekerjaan</td>
                    <td>@item.Tender.No_Vendor</td>
                    <td>@item.Tender.Pelaksana</td>
                    <td>@item.Tender.PO_OA</td>
                    <td>@item.Tender.PO_SR</td>
                    <td>@item.Tender.PO_RO</td>
                    <td>@item.Tender.PR_OA</td>
                    <td>@item.Tender.PR_MT</td>
                    <td>@item.Tender.PR_SR</td>
                    <td>@item.Tender.Nomor_SP3MK</td>
                    <td>@item.Tender?.Nilai_Purchasing_Order?.ToString("N0")</td>
                    <td>@item.Tender?.Nilai_Purchasing_Request?.ToString("N0")</td>
                    <td>@item.Tender.Durasi_Masa_Penyelesaian_MPL</td>
                    <td>@item.Tender.Bulan</td>
                    <td>@item.Tender.Buyer</td>
                    <td>@item.Tender.Otorisasi</td>
                    <td>

                        <form asp-action="Detail" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Tender.Id" />
                            <button type="submit" class="btn btn-sm btn-primary">Detail</button>
                        </form>

                        <form asp-action="FormEdit" method="post" style="display:inline;" class="edit-form">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Tender.Id" />
                            <button type="submit" class="btn btn-warning btn-sm">Edit</button>
                        </form>
                        <form asp-action="Delete" asp-route-id="@item.Tender.Id" method="post" style="display:inline;" class="delete-form">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

 

</div>


@section Scripts {
    <!-- Tambahkan library DataTables -->



<script>
    $(document).ready(function() {
        var table = $('#tabelku').DataTable({
            paging: true, // Aktifkan Pagination
            searching: true, // Aktifkan Filter/Searching
            ordering: true, 
            order: [],// Aktifkan Sorting
            columnDefs: [
             
                { targets: [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16], visible: false } // Kolom-kolom yang tersembunyi
            ]
        });

        // Function to toggle column visibility
        function toggleColumn(columnIndex, show) {
            var column = table.column(columnIndex);
            column.visible(show);
        }

        // Handle checkbox change to toggle column visibility
        function handleCheckboxChange(checkbox, columnIndex) {
            toggleColumn(columnIndex, checkbox.checked);
        }

        // Event listeners for checkboxes
        $('input[type="checkbox"]').on('change', function() {
            var columnIndex = $(this).data('column');
            handleCheckboxChange(this, columnIndex);
        });
    });
</script>








 <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Periksa pesan sukses dari TempData
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Success!',
                    icon: 'success',
                    timer: 3000, // Durasi dalam milidetik (3 detik)
                    showConfirmButton: false // Tidak menampilkan tombol OK
                });
                </text>
            }
        });
    </script>


      <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Tangkap semua form dengan class 'delete-form'
            const deleteForms = document.querySelectorAll('.delete-form');
            
            deleteForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    // Hentikan pengiriman formulir langsung
                    event.preventDefault();

                    // Tampilkan SweetAlert untuk konfirmasi
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to revert this!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Kirim formulir secara manual jika dikonfirmasi
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>

     <script>
    document.getElementById('toggleResponsive').addEventListener('click', function () {
        const tableContainer = document.getElementById('tableContainer');
        tableContainer.classList.toggle('table-responsive');

        // Update text tombol berdasarkan status
        if (tableContainer.classList.contains('table-responsive')) {
            this.textContent = 'Disable Freeze Column';
        } else {
            this.textContent = 'Enable Freeze Column';
        }
    });
</script>

}