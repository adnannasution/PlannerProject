@{
    ViewData["Title"] = "Grafik Line WBS";
    int currentYear = DateTime.Now.Year;
}

<!-- Dropdown untuk memilih tahun -->
<select id="yearSelect" class="form-control">
    @for (int i = 2020; i <= DateTime.Now.Year; i++)
    {
        if (i == currentYear)
        {
            <option value="@i" selected>@i</option>
        }
        else
        {
            <option value="@i">@i</option>
        }
    }
</select>

<!-- Dropdown untuk memilih jenis filter -->
<select id="filterTypeSelect" class="form-control mt-2">
    <option value="RUTIN" selected>RUTIN</option>
    <option value="NON RUTIN" selected>NON RUTIN</option>
    <option value="OH-PS">OH-PS</option>
</select>



   <!-- Card untuk menampilkan hasil sum -->
<!-- Card untuk menampilkan hasil sum -->
    <div class="card-deck mt-3">
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total Commitment WBS (USD)</h5>
                <p id="commitmentWbsRt" class="card-text">Loading...</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total ROP WBS (USD)</h5>
                <p id="ropWbsRt" class="card-text">Loading...</p>
            </div>
        </div>
        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total Actual WBS (USD)</h5>
                <p id="actualWbsRt" class="card-text">Loading...</p>
            </div>
        </div>

                <div class="card">
            <div class="card-body">
                <h5 class="card-title">Total Budget WBS (USD)</h5>
                <p id="budgetWbs" class="card-text">Loading...</p>
            </div>
        </div>
    </div>



<script>

document.addEventListener("DOMContentLoaded", function () {
    // Fungsi untuk memuat data dan memperbarui hasil sum
    function loadSumData(year, filterType) {
        fetch(`/Home/GetSumData?year=${year}&filterType=${filterType}`)
            .then(response => response.json())
            .then(data => {
                if (data) {
                    // Perbarui nilai di dalam card WBS
                    @* document.getElementById('commitmentWbsRt').textContent = data.wbs.commitmentWbsRt;
                    document.getElementById('ropWbsRt').textContent = data.wbs.ropWbsRt;
                    document.getElementById('actualWbsRt').textContent = data.wbs.actualWbsRt;

                    // Perbarui nilai di dalam card BudgetWbs
                    document.getElementById('budgetWbs').textContent = data.budget.budgetWbs; *@


                    // Format nilai sebagai angka dengan format ribuan (tanpa simbol mata uang)
function formatCurrency(value) {
    return new Intl.NumberFormat('id-ID').format(value);
}

// Perbarui nilai dengan format currency
document.getElementById('commitmentWbsRt').textContent = formatCurrency(data.wbs.commitmentWbsRt);
document.getElementById('ropWbsRt').textContent = formatCurrency(data.wbs.ropWbsRt);
document.getElementById('actualWbsRt').textContent = formatCurrency(data.wbs.actualWbsRt);

// Perbarui nilai di dalam card BudgetWbs
document.getElementById('budgetWbs').textContent = formatCurrency(data.budget.budgetWbs);


                } else {
                    console.error("Data tidak ditemukan");
                }
            })
            .catch(error => console.error("Error fetching data:", error));
    }

    // Event listener untuk perubahan pada dropdown
    document.getElementById('yearSelect').addEventListener('change', function() {
        const year = this.value;
        const filterType = document.getElementById('filterTypeSelect').value;
        loadSumData(year, filterType);
    });

    document.getElementById('filterTypeSelect').addEventListener('change', function() {
        const year = document.getElementById('yearSelect').value;
        const filterType = this.value;
        loadSumData(year, filterType);
    });

    // Memuat data awal ketika halaman dimuat
    loadSumData(document.getElementById('yearSelect').value, document.getElementById('filterTypeSelect').value);
});


</script>


 

<!-- Tempatkan canvas untuk chart -->
<canvas id="wbsLineChart2" width="400" height="200" class="mt-3"></canvas>


 
<!-- Memuat Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Fungsi untuk memuat data dan memperbarui chart
        function loadChartData(year, filterType) {
            fetch(`/Home/GetChartData?year=${year}&filterType=${filterType}`)
                .then(response => response.json())
                .then(data => {
                    if (data && data.length > 0) {
                        var labels = data.map(d => d.bulan);
                        var percentActual = data.map(d => d.percentActual);
                        var percentForecasting = data.map(d => d.percentForecasting);
                        var ActualWbsRt = data.map(d => d.ActualWbsRt);
                       

                        var ctx = document.getElementById('wbsLineChart2').getContext('2d');
                        if (window.wbsChart) {
                            window.wbsChart.destroy();
                        }
                        window.wbsChart = new Chart(ctx, {
                            type: 'line',
                            data: {
                                labels: labels,
                                datasets: [{
                                    label: 'Percent Actual',
                                    data: percentActual,
                                    backgroundColor: 'rgba(75, 192, 192)',
                                    borderColor: 'rgba(75, 192, 192, 1)',
                                    borderWidth: 2,
                                    fill: false,
                                       tension: 0.4 // Tambahkan properti tension untuk garis ini juga
                                }, {
                                    label: 'Percent Forecasting',
                                    data: percentForecasting,
                                    backgroundColor: 'rgba(255, 159, 64)',
                                    borderColor: 'rgba(255, 159, 64, 1)',
                                    borderWidth: 2,
                                    fill: false,
                                       tension: 0.4 // Tambahkan properti tension untuk garis ini juga
                                }]
                            },
                            options: {
                                responsive: true,
                                scales: {
                                    x: {
                                        title: { display: true, text: 'Bulan' },
                                        beginAtZero: true
                                    },
                                    y: {
                                        title: { display: true, text: 'Persentase' },
                                        beginAtZero: true
                                    }
                                },
                                plugins: {
                                    legend: { position: 'top' },
                                    tooltip: {
                                        callbacks: {
                            label: function (context) {
            var index = context.dataIndex;
            var datasetLabel = context.dataset.label || '';
            var value = context.raw || 0;

  // Ambil actualWbsRt dari JSON, jika null tampilkan "N/A"
            var actualWbsRt = data[index]?.actualWbsRt ?? "N/A";

            // Format actualWbsRt ke currency (IDR)
            if (actualWbsRt !== "N/A") {
                actualWbsRt = actualWbsRt.toLocaleString('en-US', { style: 'currency', currency: 'USD' });
            }

            return `${datasetLabel}: ${value}% | Actual WBS: ${actualWbsRt}`;
        }
                                        }
                                    }
                                }
                            }
                        });
                    } else {
                        //alert("Data tidak tersedia untuk tahun dan filter tersebut");
                    }
                })
                .catch(error => console.error("Terjadi kesalahan saat memuat data:", error));
        }

        // Event listener untuk dropdown tahun dan filter
        document.getElementById('yearSelect').addEventListener('change', function () {
            loadChartData(this.value, document.getElementById('filterTypeSelect').value);
        });

        document.getElementById('filterTypeSelect').addEventListener('change', function () {
            loadChartData(document.getElementById('yearSelect').value, this.value);
        });

        // Memuat data untuk tahun dan filter pertama kali (default)
        loadChartData(document.getElementById('yearSelect').value, document.getElementById('filterTypeSelect').value);
    });
</script>

</div>