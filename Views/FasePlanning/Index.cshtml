@model IEnumerable<Plan.Models.FasePlanning>

@{
    ViewData["Title"] = "List Planning Project";
}

<!-- Add the script for xlsx -->



    <style>
    #tabelku {
        width: 100%;
        border-collapse: collapse;
    }

    #tabelku thead th {
        position: sticky;
        top: 0;
        background-color: #f8f9fa; /* Warna background header */
        z-index: 2; /* Supaya tetap di atas */
        text-align: left; /* Sesuai kebutuhan */
        border-bottom: 2px solid #dee2e6; /* Garis bawah header */
    }

    #tabelku tbody tr:nth-child(odd) {
        background-color: #f9f9f9; /* Alternatif warna baris */
    }

    #tabelku tbody tr:nth-child(even) {
        background-color: #ffffff;
    }

    .table-container {
        max-height: 400px; /* Tinggi maksimum tabel dengan scroll */
        overflow-y: auto;
        border: 1px solid #ddd; /* Tambahkan border pada container */
    }
</style>


 <style>
        .hidden-column {
            display: none;
        }
        .dropdown-content {
            display: none;
            position: absolute;
            background-color: #f9f9f9;
            min-width: 160px;
            box-shadow: 0px 8px 16px rgba(0,0,0,0.2);
            padding: 12px 16px;
            z-index: 1;
        }
        .dropdown:hover .dropdown-content {
            display: block;
        }
    </style>



<div class="d-flex gap-2 mb-1">
    <a asp-action="Create" class="btn btn-primary btn-sm m-1">Create New</a>
    <button id="toggleResponsive" class="btn btn-secondary btn-sm m-1">Freeze Column</button>
    <button id="exportToExcel" class="btn btn-success btn-sm m-1">
        <i class="fa fa-file-excel"></i> Export to Excel
    </button>


<div class="dropdown">
    <button class="btn btn-secondary btn-sm m-1">Show/Hide Columns</button>
    <div class="dropdown-content" style="z-index: 999;">
        <label><input type="checkbox" data-column="0" checked onchange="handleCheckboxChange(this, 0)"> Kode Project</label><br>
        <label><input type="checkbox" data-column="1" checked onchange="handleCheckboxChange(this, 1)"> Planner</label><br>
        <label><input type="checkbox" data-column="2" checked onchange="handleCheckboxChange(this, 2)"> Kode Irkap</label><br>
           <label><input type="checkbox" data-column="3" checked onchange="handleCheckboxChange(this, 3)"> Judul Kontrak</label><br>
        <label><input type="checkbox" data-column="4"  onchange="handleCheckboxChange(this, 4)"> Kategori Kontrak</label><br>
        <label><input type="checkbox" data-column="5" onchange="handleCheckboxChange(this, 5)"> MOC</label><br>
        <label><input type="checkbox" data-column="6" onchange="handleCheckboxChange(this, 6)"> Jenis Pengadaan</label><br>
        <label><input type="checkbox" data-column="7" onchange="handleCheckboxChange(this, 7)"> Tahun</label><br>
        <label><input type="checkbox" data-column="8" onchange="handleCheckboxChange(this, 8)"> Disiplin</label><br>
        <label><input type="checkbox" data-column="9" onchange="handleCheckboxChange(this, 9)"> Kategori Equipment</label><br>
        <label><input type="checkbox" data-column="10" onchange="handleCheckboxChange(this, 10)"> Status Kontrak</label><br>
        <label><input type="checkbox" data-column="11" onchange="handleCheckboxChange(this, 11)"> Kategori Maintenance</label><br>
     
        <label><input type="checkbox" data-column="12" onchange="handleCheckboxChange(this, 12)"> Area</label><br>
        <label><input type="checkbox" data-column="13" onchange="handleCheckboxChange(this, 13)"> Direksi</label><br>
        <label><input type="checkbox" data-column="14" onchange="handleCheckboxChange(this, 14)"> Jenis Kontrak</label><br>
        <label><input type="checkbox" data-column="15" onchange="handleCheckboxChange(this, 15)"> Notifikasi</label><br>
        <label><input type="checkbox" data-column="16" onchange="handleCheckboxChange(this, 16)"> Tanggal NOPR</label><br>
        <label><input type="checkbox" data-column="17" onchange="handleCheckboxChange(this, 17)"> Prognosa Tanggal Kirim Paket</label><br>
        <label><input type="checkbox" data-column="18" onchange="handleCheckboxChange(this, 18)"> Notes</label><br>
        <label><input type="checkbox" data-column="19" onchange="handleCheckboxChange(this, 19)"> No Memo Rekomendasi</label><br>
    </div>
</div>

</div>




<div id="tableContainer" class="table-responsive">

<script>
    document.getElementById('exportToExcel').addEventListener('click', function () {
        // Prepare your data (You can get the data from a table or other elements)
        let table = document.getElementById("tabelku"); // Replace with your table ID
        
        // Create a new workbook and worksheet from the table
        let wb = XLSX.utils.table_to_book(table, {sheet: "Sheet 1"});
        
        // Export the workbook as an Excel file
        XLSX.writeFile(wb, 'exported_data.xlsx');
    });
</script>





@{
    // Get the Disiplin claim from the user's claims
    var disiplinClaim = User.Claims.FirstOrDefault(c => c.Type == "Disiplin")?.Value;
}

<table class="table table-striped table-bordered" id="tabelku">
    <thead>
        <tr>
            @* <th>Id</th> *@
            <th>Kode Project</th>
            <th>Planner</th>
            <th>Kode Irkap</th>
            <th>Judul Kontrak</th>
            <th>Kategori Kontrak</th>
            <th>MOC</th>
            <th>Jenis Pengadaan</th>
            <th>Tahun</th>
            <th>Disiplin</th>
            <th>Kategori Equipment</th>
            <th>Status Kontrak</th>
            <th>Kategori Maintenance</th>
            
            <th>Area</th>
            <th>Direksi</th>
            <th>Jenis Kontrak</th>
            <th>Notifikasi</th>
            <th>Tanggal NOPR</th>
            <th>Prognosa Tanggal Kirim Paket</th>
            <th>Notes</th>
            <th>No Memo Rekomendasi</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            // Mendapatkan disiplin dari kode project
            var kodeParts = item.Kode_Project.Split('/');
            var disiplinFromKode = kodeParts.Length > 2 ? kodeParts[2] : string.Empty;

            // Filter berdasarkan klaim disiplin
            if (string.IsNullOrEmpty(disiplinClaim) || 
                disiplinClaim.Equals("All", StringComparison.OrdinalIgnoreCase) || 
                disiplinFromKode.Equals(disiplinClaim, StringComparison.OrdinalIgnoreCase))
            {
                <tr>
                    @* <td>@item.Id</td> *@
                    <td>@item.Kode_Project</td>
                    <td>@item.Planner</td>
                    <td>@item.NoProgram</td>
                     <td>@item.Pekerjaan</td>
                    <td>@item.Kategori_Kontrak</td>
                    <td>@item.MOC</td>
                    <td>@item.Jenis_Project</td>
                    <td>@item.Tahun</td>
                    <td>@item.Disiplin</td>
                    <td>@item.Kategori_Equipment</td>
                    <td>@item.Status_kontrak</td>
                    <td>@item.Kategori_Maintenance</td>
                   
                    <td>@item.Area</td>
                    <td>@item.Direksi</td>
                    <td>@item.Jenis_Kontrak</td>
                    <td>@item.Notifikasi</td>
                    <td>@item.Tanggal_Update?.ToString("yyyy-MM-dd")</td>
                    <td>@item.Tanggal_Kirim_Paket?.ToString("yyyy-MM-dd")</td>
                    <td>@item.Informasi_Detail</td>
                    <td>@item.No_Memo_Rekomendasi</td>
                    <td>

                     <form asp-action="Detail" method="post">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-primary btn-sm">Detail</button>
                        </form>

                        <form asp-action="FormEdit" method="post" style="display:inline;" class="edit-form">
                            @Html.AntiForgeryToken()
                            <input type="hidden" name="id" value="@item.Id" />
                            <button type="submit" class="btn btn-warning btn-sm">Edit</button>
                        </form>
                        <form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;" class="delete-form">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                        </form>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>


</div>

@section Scripts {
    <!-- Tambahkan library DataTables -->



<script>
    $(document).ready(function() {
        var table = $('#tabelku').DataTable({
            paging: true, // Aktifkan Pagination
            searching: true, // Aktifkan Filter/Searching
            ordering: true,
            order: [], // Aktifkan Sorting
            columnDefs: [
           
                { targets: [4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], visible: false } // Kolom-kolom yang tersembunyi saat pertama kali
            ]
        });

        // Function to toggle column visibility
        function toggleColumn(columnIndex, show) {
            var column = table.column(columnIndex);
            column.visible(show);
        }

        // Handle checkbox change to toggle column visibility
        function handleCheckboxChange(checkbox, columnIndex) {
            toggleColumn(columnIndex, checkbox.checked);
        }

        // Event listeners for checkboxes
        $('input[type="checkbox"]').on('change', function() {
            var columnIndex = $(this).data('column');
            handleCheckboxChange(this, columnIndex);
        });
    });
</script>




 <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Periksa pesan sukses dari TempData
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Success!',
                    icon: 'success',
                    timer: 3000, // Durasi dalam milidetik (3 detik)
                    showConfirmButton: false // Tidak menampilkan tombol OK
                });
                </text>
            }
        });
    </script>


      <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Tangkap semua form dengan class 'delete-form'
            const deleteForms = document.querySelectorAll('.delete-form');
            
            deleteForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    // Hentikan pengiriman formulir langsung
                    event.preventDefault();

                    // Tampilkan SweetAlert untuk konfirmasi
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to revert this!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Kirim formulir secara manual jika dikonfirmasi
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>


}

    <script>
    document.getElementById('toggleResponsive').addEventListener('click', function () {
        const tableContainer = document.getElementById('tableContainer');
        tableContainer.classList.toggle('table-responsive');

        // Update text tombol berdasarkan status
        if (tableContainer.classList.contains('table-responsive')) {
            this.textContent = 'Disable freeze column';
        } else {
            this.textContent = 'Enable freeze column';
        }
    });
</script>