@model ChangePasswordViewModel

@{
    ViewData["Title"] = "Change Password";
}

<div class="alert alert-warning" style="background-color: #FFE5B4; color: #8B4513;">Perbarui password Anda secara berkala untuk menghindari risiko kebocoran data</div>
<form asp-action="ChangePassword" method="post" class="needs-validation" novalidate>
    <div class="mb-3">
        <label for="OldPassword" class="form-label">Password Lama</label>
        <input type="password" id="OldPassword" name="OldPassword" class="form-control" required />
        <div class="invalid-feedback">
            Silakan masukkan password lama Anda.
        </div>
    </div>
    <div class="mb-3">
        <label for="NewPassword" class="form-label">Password Baru</label>
        <input type="password" id="NewPassword" name="NewPassword" class="form-control" required oninput="validatePassword()" />
        <div class="invalid-feedback">
            Password baru harus minimal 8 karakter, termasuk huruf besar, huruf kecil, angka.
        </div>
    </div>
    <div class="mb-3">
        <label for="ConfirmPassword" class="form-label">Konfirmasi Password Baru</label>
        <input type="password" id="ConfirmPassword" name="ConfirmPassword" class="form-control" required oninput="validateConfirmPassword()" />
        <div class="invalid-feedback">
            Silakan konfirmasi password baru Anda.
        </div>
    </div>
    <button type="submit" class="btn btn-primary">Ganti Password</button>
</form>


     <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Periksa pesan sukses dari TempData
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Success!',
                    icon: 'success',
                    timer: 3000, // Durasi dalam milidetik (3 detik)
                    showConfirmButton: false // Tidak menampilkan tombol OK
                });
                </text>
            }
        });
    </script>



<script>
    $(document).ready(function() {
        // Validate password strength on input
        $('#NewPassword').on('input', function() {
            const password = $(this).val();
            const regex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d]{8,}$/;
            if (!regex.test(password)) {
                $(this)[0].setCustomValidity("Password harus terdiri dari minimal 8 karakter, termasuk huruf besar, huruf kecil, dan angka.");
            } else {
                $(this)[0].setCustomValidity("");
            }
        });

        // Validate confirm password
        $('#ConfirmPassword').on('input', function() {
            const newPassword = $('#NewPassword').val();
            const confirmPassword = $(this).val();
            if (newPassword !== confirmPassword) {
                $(this)[0].setCustomValidity("Password baru dan konfirmasi password harus sama.");
            } else {
                $(this)[0].setCustomValidity("");
            }
        });

        // Bootstrap form validation handling
        $('.needs-validation').on('submit', function(event) {
            if (!this.checkValidity()) {
                event.preventDefault();
                event.stopPropagation();
            }
            $(this).addClass('was-validated');
        });
    });
</script>


