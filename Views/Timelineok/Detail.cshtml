@model IEnumerable<Plan.Models.Timelineok>

@{
    ViewData["Title"] = "Monitoring Project - Detail";
}


<table class="table table-bordered mt-3 table-striped" id="tabelku">
    <thead>
        <tr>
          
            <th>Kode Project</th>
            <th>Task</th>
            <th>PIC</th>
            <th>Tanggal</th>
            <th>Resume</th>
            <th>Dokumen</th>
            <th>Status</th>
            <th>Remarks</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.OrderBy(x => x.Id))
        {
            <tr>
             
                <td>@item.Kode_Project</td>
                <td>@item.Task</td>
                <td>@item.Pic</td>
                <td>@item.Tanggal.ToString("dd/MM/yyyy")</td>
                  <td>@item.ResumeStatusPekerjaan</td>
                 




                @* <td>
                    @if (!string.IsNullOrEmpty(item.Dokumen))
                    {
                        <a href="@item.Dokumen" target="_blank">View File</a>
                    }

                    
                </td> *@


                @* <td>
    @if (!string.IsNullOrEmpty(item.Dokumen))
    {
        var email = User.Claims.FirstOrDefault(c => c.Type == "Email")?.Value ?? "unknown@example.com";

        <a href="@item.Dokumen"
           data-id="@item.Id"
           data-kode="@item.Kode_Project"
           data-nama="@item.Dokumen"
           data-email="@email" target="_blank" class="btn-dokumen">
            View File
        </a>
    }
</td> *@

<td>
<a href="/Timelineok/TampilDokumenList?kode_project=@item.Kode_Project&task=@item.Task" 
   data-bs-toggle="modal" data-bs-target="#modalDokumen">
    Lihat Dokumen
</a>
</td>





            <td>
    @if (item.Status == "Ontime")
    {
        <span class="badge bg-primary">On time</span>
    }

    else if (item.Status == "Overdue")
    {
        <span class="badge bg-danger">Overdue</span>
    }
</td>


 <td>@item.Keterangan</td>
                
                  <td>
<form asp-action="FormEdit" method="post" style="display:inline;" class="edit-form">
    @Html.AntiForgeryToken()
    <input type="hidden" name="id" value="@item.Id" />
    <button type="submit" class="btn btn-warning btn-sm"><i class="fas fa-edit"></i></button>
</form>

<form asp-action="Delete" asp-route-id="@item.Id" method="post" style="display:inline;" class="delete-form">
    @Html.AntiForgeryToken()
    <button type="submit" class="btn btn-danger btn-sm"><i class="fas fa-trash"></i></button>
</form>
                </td>
            </tr>
        }
    </tbody>
</table>








<a asp-action="ViewSla" asp-route-kodeProject="@Model.FirstOrDefault()?.Kode_Project" class="btn btn-info">
    Lihat SLA
</a>

<a asp-action="TampilHistoryTimelineok" asp-route-kodeProject="@Model.FirstOrDefault()?.Kode_Project" class="btn btn-info">
    Activity Log
</a>

<a asp-action="Index" class="btn btn-secondary">Back to List</a>

@* 
@{
 var email = User.Claims.FirstOrDefault(c => c.Type == "Email")?.Value ?? "unknown@example.com";
} *@












<!-- Modal -->
<div class="modal fade" id="modalDokumen" tabindex="-1" aria-labelledby="modalDokumenLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalDokumenLabel">Daftar Dokumen</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" id="modalContent">
                <!-- Halaman TampilDokumenList akan dimuat di sini -->
            </div>
        </div>
    </div>
</div>



<script>
document.addEventListener("DOMContentLoaded", function () {
    var modalDokumen = document.getElementById("modalDokumen");
    
    modalDokumen.addEventListener("show.bs.modal", function (event) {
        var button = event.relatedTarget;
        var url = button.getAttribute("href"); // Ambil URL dari tombol
        
        // Muat halaman ke dalam modal
        fetch(url)
            .then(response => response.text())
            .then(html => {
                document.getElementById("modalContent").innerHTML = html;
            })
            .catch(error => console.error("Error loading page:", error));
    });
});
</script>
















 


@section Scripts {
    <!-- Tambahkan library DataTables -->


    <script>
        $(document).ready(function () {
            $('#tabelku').DataTable({
                paging: true, // Aktifkan Pagination
                searching: true, // Aktifkan Filter/Searching
                ordering: true, // Aktifkan Sorting
                columnDefs: [
                    { orderable: false, targets: 2 } // Kolom 'Actions' tidak diurutkan
                ]
            });
        });
    </script>




     <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Periksa pesan sukses dari TempData
            @if (TempData["SuccessMessage"] != null)
            {
                <text>
                Swal.fire({
                    title: 'Success!',
                    icon: 'success',
                    timer: 3000, // Durasi dalam milidetik (3 detik)
                    showConfirmButton: false // Tidak menampilkan tombol OK
                });
                </text>
            }
        });
    </script>


      <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Tangkap semua form dengan class 'delete-form'
            const deleteForms = document.querySelectorAll('.delete-form');
            
            deleteForms.forEach(form => {
                form.addEventListener('submit', function (event) {
                    // Hentikan pengiriman formulir langsung
                    event.preventDefault();

                    // Tampilkan SweetAlert untuk konfirmasi
                    Swal.fire({
                        title: 'Are you sure?',
                        text: 'You won\'t be able to revert this!',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Kirim formulir secara manual jika dikonfirmasi
                            form.submit();
                        }
                    });
                });
            });
        });
    </script>




<script>
document.addEventListener("DOMContentLoaded", function () {
    document.addEventListener("click", function (event) {
        // Pastikan elemen yang diklik memiliki class "btn-dokumen"
        if (event.target.classList.contains("btn-dokumen")) {
            event.preventDefault(); // Mencegah download langsung

            //alert("tampil"); // Pastikan ini muncul saat diklik

            var kodeProject = event.target.getAttribute("data-kode");
            var namaDokumen = event.target.getAttribute("data-nama");
            var fileUrl = event.target.getAttribute("href");

            // Kirim data ke server dengan Fetch API
            fetch("/Timelineok/RekamAktivitas", {
                method: "POST",
                headers: {
                    "Content-Type": "application/x-www-form-urlencoded",
                },
                body: "kodeProject=" + encodeURIComponent(kodeProject) + 
                      "&namaDokumen=" + encodeURIComponent(namaDokumen)
            })
            .then(response => response.json())
            .then(data => {
                //alert(data.message); // Notifikasi sukses dari server
                 window.open(fileUrl, "_blank");  // Download file setelah sukses
            })
            .catch(error => {
                console.error("Error:", error);
                alert("Gagal menyimpan aktivitas.");
            });
        }
    });
});
</script>



}